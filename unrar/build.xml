<project name="unrar" default="all">

	<!-- declare ant4eclipse -->
	<taskdef resource="net/sf/ant4eclipse/antlib.xml" />
    <!-- declare svnant -->
    <taskdef resource="org/tigris/subversion/svnant/svnantlib.xml" />
    <!-- declare antcontrib -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" />

	<xmlproperty file=".project"/>
	<property name="project.name" value="${projectDescription.name}" />
	<property name="project" value="${basedir}" />
	<property name="build.dir" value="${basedir}/build" />

    <patternset id="class.archive.name.patterns">
        <include name="*.jar" />
        <include name="*.zip" />
    </patternset>

   <!--set lib.external.class.path, which is neeeded to build the project without eclipse -->
	<getReferencedProjects property="referencedProjects" project="${basedir}" />
	<!--initialize the variable to stop veeery strange things from happening..-->
	<var name="patterntmp" value=" "/>
	
	<for list="${referencedProjects}" param="projects">
		<sequential>
			<if>
				<!--we don't want our own Project added here -->
				<equals arg1="@{projects}" arg2="${project.name}" />
							<then>
								<echo>will not add ${project.name} to lib.external.class.path</echo>
							</then>
			<else>
				<var name="patterntmp" value="${patterntmp}, @{projects}/*.jar"/>
                <var name="patterntmp" value="${patterntmp}, @{projects}/*.zip"/>
			</else>
			</if>
		</sequential>
	</for>
	
	<patternset id="external.pattern" includes="${patterntmp}"/>

    
	<path id="lib.external.class.path">
        	<fileset dir="${basedir}/..">
        		<patternset refid="external.pattern"/>    
        	</fileset>
	</path>


	<target name="all" depends="jar, jar-test">
	    	<!-- cleanup the build-dir -->
		<delete dir="${build.dir}"/>
	</target>
	
	
	<!-- ================================= 
          target: build              
         ================================= -->
	<target name="build">
	    <!--  Get referenced projects of "project4" -->
	    <getReferencedProjects property="referencedProjects" 
	    	project="${project}"
	    	exportedonly="true" 
	    />
		
		<!-- resolve the eclipse output location -->
		<getOutputpath property="classes.dir" project="${project}" />

		<!-- init output location -->
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
		
		<!-- resolve the eclipse source location -->
		<!-- getSourcepath property="source.dir" project="${project}" / -->
		<property name="source.dir" value="${basedir}/src" />
		
		<!-- read the eclipse classpath -->
		<getEclipseClasspath pathId="build.classpath" project="${project}" />

        <!-- compile -->
        <javac srcdir="${source.dir}" 
                destdir="${build.dir}" 
                debug="true" 
                deprecation="on"          
                optimize="on">
               <compilerarg value="-Xlint:unchecked" />
               <classpath>
                  <path refid="build.classpath" />
                  <path refid="lib.external.class.path" />
               </classpath>
        </javac>

		<!-- copy resources from src to bin -->
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${source.dir}">
				
			</fileset>
		</copy>
	</target>

    <!--=======================
        === Create jar file ===
        =======================-->
    <target name="jar" depends="build, svninfo" description="Creates the innoSysTec jar-file of this project.">

        <jar
            destfile="${project.name}.jar"
            basedir="${build.dir}">
            <manifest>
                <attribute name="Created-By" value="${user.name}"/>
                <attribute name="Created-On" value="${timestamp}"/>
                <attribute name="HEAD-Revision" value="${svn.revision}"/>
                <attribute name="Last-Changed-Rev" value="${svn.lastCommitRevision}"/>
                <attribute name="Repository" value="${svn.urlProperty}"/>
                <attribute name="Main-Class" value="de.innosystec.unrar.Archive"/>
                <attribute name="Class-Path" value="commons-logging-1.1.jar"/>
            </manifest>
        </jar>
        
    </target>

	<target name="jar-test" depends="build, svninfo" description="Creates the innoSysTec jar-test-file of this project.">

	        <jar
	            destfile="${project.name}-test.jar"
	            basedir="${build.dir}">
	            <manifest>
	                <attribute name="Created-By" value="${user.name}"/>
	                <attribute name="Created-On" value="${timestamp}"/>
	                <attribute name="HEAD-Revision" value="${svn.revision}"/>
	                <attribute name="Last-Changed-Rev" value="${svn.lastCommitRevision}"/>
	                <attribute name="Repository" value="${svn.urlProperty}"/>
	                <attribute name="Main-Class" value="de.innosystec.unrar.testutil.JUnRarTestUtil"/>
	                <attribute name="Class-Path" value="commons-logging-1.1.jar"/>
	            </manifest>
	        </jar>
	        
	    </target>
	
    <!-- ================================= 
		target: svninfo
		================================= -->
    <target name="svninfo">
        <tstamp>
            <format property="timestamp" pattern="yyyy-MM-dd HH:mm"	/>
        </tstamp>
        
        <svn javahl="false">
            <status path="${basedir}" 
                        lastChangedRevisionProperty="svn.lastCommitRevision" 
                        revisionProperty="svn.revision" 
                        urlProperty="svn.urlProperty"/>
        </svn>
    </target>
</project>
